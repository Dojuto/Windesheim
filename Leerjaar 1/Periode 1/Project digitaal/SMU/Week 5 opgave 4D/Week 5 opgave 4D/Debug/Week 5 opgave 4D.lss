
Week 5 opgave 4D.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  00000256  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000202  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000256  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000288  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000031db  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002d92  00000000  00000000  000034c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000434  00000000  00000000  00006255  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000668c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001773  00000000  00000000  000066b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000004c  00000000  00000000  00007e23  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00007e6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 86 00 	call	0x10c	; 0x10c <main>
 104:	0c 94 ff 00 	jmp	0x1fe	; 0x1fe <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <main>:
#include <avr/io.h>


int main(void)
{
	PORTA.DIR = PORTA.DIR | 0xF0;
 10c:	e0 e0       	ldi	r30, 0x00	; 0
 10e:	f4 e0       	ldi	r31, 0x04	; 4
 110:	80 81       	ld	r24, Z
 112:	80 6f       	ori	r24, 0xF0	; 240
 114:	80 83       	st	Z, r24
	PORTF.DIR = PORTF.DIR | 0x0C;
 116:	e0 ea       	ldi	r30, 0xA0	; 160
 118:	f4 e0       	ldi	r31, 0x04	; 4
 11a:	80 81       	ld	r24, Z
 11c:	8c 60       	ori	r24, 0x0C	; 12
 11e:	80 83       	st	Z, r24

	while (1)
	{
		uint8_t sw1_status = !(PORTE.IN & PIN3_bm);
 120:	e0 e8       	ldi	r30, 0x80	; 128
 122:	f4 e0       	ldi	r31, 0x04	; 4
 124:	80 85       	ldd	r24, Z+8	; 0x08
 126:	88 70       	andi	r24, 0x08	; 8
 128:	90 e0       	ldi	r25, 0x00	; 0
		uint8_t sw2_status = !(PORTE.IN & PIN2_bm);
 12a:	20 85       	ldd	r18, Z+8	; 0x08
 12c:	24 70       	andi	r18, 0x04	; 4
 12e:	30 e0       	ldi	r19, 0x00	; 0
		uint8_t sw3_status = !(PORTE.IN & PIN1_bm);
 130:	40 85       	ldd	r20, Z+8	; 0x08
 132:	42 70       	andi	r20, 0x02	; 2
 134:	50 e0       	ldi	r21, 0x00	; 0
		PORTF.OUTSET = PIN3_bm;
 136:	68 e0       	ldi	r22, 0x08	; 8
 138:	60 93 a5 04 	sts	0x04A5, r22	; 0x8004a5 <__TEXT_REGION_LENGTH__+0x7e04a5>
		
		
		

		// EEN KNOP
		if (sw1_status && !sw2_status && !sw3_status || sw2_status && !sw1_status && !sw3_status|| sw3_status && !sw1_status && !sw2_status)
 13c:	00 97       	sbiw	r24, 0x00	; 0
 13e:	19 f4       	brne	.+6      	; 0x146 <main+0x3a>
 140:	21 15       	cp	r18, r1
 142:	31 05       	cpc	r19, r1
 144:	29 f4       	brne	.+10     	; 0x150 <main+0x44>
 146:	21 15       	cp	r18, r1
 148:	31 05       	cpc	r19, r1
 14a:	29 f4       	brne	.+10     	; 0x156 <main+0x4a>
 14c:	00 97       	sbiw	r24, 0x00	; 0
 14e:	19 f0       	breq	.+6      	; 0x156 <main+0x4a>
 150:	41 15       	cp	r20, r1
 152:	51 05       	cpc	r21, r1
 154:	41 f4       	brne	.+16     	; 0x166 <main+0x5a>
 156:	41 15       	cp	r20, r1
 158:	51 05       	cpc	r21, r1
 15a:	81 f4       	brne	.+32     	; 0x17c <main+0x70>
 15c:	00 97       	sbiw	r24, 0x00	; 0
 15e:	71 f0       	breq	.+28     	; 0x17c <main+0x70>
 160:	21 15       	cp	r18, r1
 162:	31 05       	cpc	r19, r1
 164:	59 f0       	breq	.+22     	; 0x17c <main+0x70>
		{
			if (PORTA.OUTSET != 0x10)
 166:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <__TEXT_REGION_LENGTH__+0x7e0405>
 16a:	80 31       	cpi	r24, 0x10	; 16
 16c:	c9 f2       	breq	.-78     	; 0x120 <main+0x14>
			{
				PORTA.OUTCLR = 0xFF;
 16e:	e0 e0       	ldi	r30, 0x00	; 0
 170:	f4 e0       	ldi	r31, 0x04	; 4
 172:	8f ef       	ldi	r24, 0xFF	; 255
 174:	86 83       	std	Z+6, r24	; 0x06
				PORTA.OUTSET = 0x10;
 176:	80 e1       	ldi	r24, 0x10	; 16
 178:	85 83       	std	Z+5, r24	; 0x05
 17a:	d2 cf       	rjmp	.-92     	; 0x120 <main+0x14>
			}
		}
		
		//TWEE KNOPPEN
		else if ((sw1_status && sw2_status && !sw3_status) || (sw3_status && sw1_status &&!sw2_status) || (sw2_status && sw3_status && !sw1_status))
 17c:	00 97       	sbiw	r24, 0x00	; 0
 17e:	31 f4       	brne	.+12     	; 0x18c <main+0x80>
 180:	21 15       	cp	r18, r1
 182:	31 05       	cpc	r19, r1
 184:	19 f4       	brne	.+6      	; 0x18c <main+0x80>
 186:	41 15       	cp	r20, r1
 188:	51 05       	cpc	r21, r1
 18a:	81 f4       	brne	.+32     	; 0x1ac <main+0xa0>
 18c:	41 15       	cp	r20, r1
 18e:	51 05       	cpc	r21, r1
 190:	29 f4       	brne	.+10     	; 0x19c <main+0x90>
 192:	00 97       	sbiw	r24, 0x00	; 0
 194:	19 f4       	brne	.+6      	; 0x19c <main+0x90>
 196:	21 15       	cp	r18, r1
 198:	31 05       	cpc	r19, r1
 19a:	41 f4       	brne	.+16     	; 0x1ac <main+0xa0>
 19c:	21 15       	cp	r18, r1
 19e:	31 05       	cpc	r19, r1
 1a0:	89 f4       	brne	.+34     	; 0x1c4 <main+0xb8>
 1a2:	41 15       	cp	r20, r1
 1a4:	51 05       	cpc	r21, r1
 1a6:	71 f4       	brne	.+28     	; 0x1c4 <main+0xb8>
 1a8:	00 97       	sbiw	r24, 0x00	; 0
 1aa:	61 f0       	breq	.+24     	; 0x1c4 <main+0xb8>
		{
			if (PORTA.OUTSET != 0x20)
 1ac:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <__TEXT_REGION_LENGTH__+0x7e0405>
 1b0:	80 32       	cpi	r24, 0x20	; 32
 1b2:	09 f4       	brne	.+2      	; 0x1b6 <main+0xaa>
 1b4:	b5 cf       	rjmp	.-150    	; 0x120 <main+0x14>
			{
				PORTA.OUTCLR = 0xFF;
 1b6:	e0 e0       	ldi	r30, 0x00	; 0
 1b8:	f4 e0       	ldi	r31, 0x04	; 4
 1ba:	8f ef       	ldi	r24, 0xFF	; 255
 1bc:	86 83       	std	Z+6, r24	; 0x06
				PORTA.OUTSET = 0x20;
 1be:	80 e2       	ldi	r24, 0x20	; 32
 1c0:	85 83       	std	Z+5, r24	; 0x05
 1c2:	ae cf       	rjmp	.-164    	; 0x120 <main+0x14>
			}
			
		}
		
		//DRIE KNOPPEN
		else if (sw1_status && sw2_status && sw3_status)
 1c4:	89 2b       	or	r24, r25
 1c6:	81 f4       	brne	.+32     	; 0x1e8 <main+0xdc>
 1c8:	23 2b       	or	r18, r19
 1ca:	71 f4       	brne	.+28     	; 0x1e8 <main+0xdc>
 1cc:	45 2b       	or	r20, r21
 1ce:	61 f4       	brne	.+24     	; 0x1e8 <main+0xdc>
		{	
			if (PORTA.OUTSET != 0x30)
 1d0:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <__TEXT_REGION_LENGTH__+0x7e0405>
 1d4:	80 33       	cpi	r24, 0x30	; 48
 1d6:	09 f4       	brne	.+2      	; 0x1da <main+0xce>
 1d8:	a3 cf       	rjmp	.-186    	; 0x120 <main+0x14>
			{
				PORTA.OUTCLR = 0xFF;
 1da:	e0 e0       	ldi	r30, 0x00	; 0
 1dc:	f4 e0       	ldi	r31, 0x04	; 4
 1de:	8f ef       	ldi	r24, 0xFF	; 255
 1e0:	86 83       	std	Z+6, r24	; 0x06
				PORTA.OUTSET = 0x30;
 1e2:	80 e3       	ldi	r24, 0x30	; 48
 1e4:	85 83       	std	Z+5, r24	; 0x05
 1e6:	9c cf       	rjmp	.-200    	; 0x120 <main+0x14>
			}
			
		}
		else {
			if (PORTA.OUTSET != 0x0)
 1e8:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <__TEXT_REGION_LENGTH__+0x7e0405>
 1ec:	88 23       	and	r24, r24
 1ee:	09 f4       	brne	.+2      	; 0x1f2 <main+0xe6>
 1f0:	97 cf       	rjmp	.-210    	; 0x120 <main+0x14>
			{
				PORTA.OUTCLR = 0xFF;
 1f2:	e0 e0       	ldi	r30, 0x00	; 0
 1f4:	f4 e0       	ldi	r31, 0x04	; 4
 1f6:	8f ef       	ldi	r24, 0xFF	; 255
 1f8:	86 83       	std	Z+6, r24	; 0x06
				PORTA.OUTSET = 0x0;
 1fa:	15 82       	std	Z+5, r1	; 0x05
 1fc:	91 cf       	rjmp	.-222    	; 0x120 <main+0x14>

000001fe <_exit>:
 1fe:	f8 94       	cli

00000200 <__stop_program>:
 200:	ff cf       	rjmp	.-2      	; 0x200 <__stop_program>
